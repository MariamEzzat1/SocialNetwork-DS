String filename ;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
   
        JFileChooser chooser =new JFileChooser();
        chooser.showOpenDialog(null);
        File f =chooser.getSelectedFile();
        filename=f.getAbsolutePath();
        
        
        try{
        FileReader reader = new FileReader(filename);
        BufferedReader br = new BufferedReader(reader);
        jTextArea1.read(br,null);
        br.close();
          jTextArea1.requestFocus();
           
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null, e);}
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
      
      
      String [] array = readArray(filename);
     String res=minifying(array);
     jTextArea2.setText(res);
 
    
    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
String[] arr = read(filename);
      String consistency=CheckConsistent(arr);
      jTextArea2.setText(consistency);
        // TODO add your handling code here:
      
    }                                        

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
       
      String [] array = readArray(filename);
String text=minifying(array);
//System.out.println ("size of compressed file: ");
//printFileSize("compressed.txt");
 String compress=compression (text);
  String formatted = getPrettyXml(compress);
 
        jTextArea2.setText(formatted+"\n"+"size of compressed file: "+printFileSize("compressed.txt")); 
     
    }                                        

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {                                         
 String text = readString(filename);
    String format = getPrettyXml(text);
    jTextArea2.setText(format);

        // TODO add your handling code here:
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(editorxml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(editorxml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(editorxml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(editorxml.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new editorxml().setVisible(true);
            }
